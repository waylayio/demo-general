{"sensors":[{"label":"Sagemaker_1","name":"Sagemaker","version":"0.2.24","dataTrigger":false,"tickTrigger":false,"position":[618,315],"sequence":1,"properties":{"endpoint":"asset-10111","observations":"scriptSensor_1.request","contentType":"application/json"}},{"label":"compareSeries","name":"timeSeriesSensor","version":"1.2.1","dataTrigger":false,"tickTrigger":false,"position":[798,317],"sequence":1,"properties":{"grouping":"PT1H","aggregate":"sum","to":"1557316799999","resource":"asset_20_10111_electricity","metric":"ActualActivePower","from":"1556711999999"}},{"label":"computeRMSE","name":"scriptSensor","version":"0.0.9","dataTrigger":false,"tickTrigger":false,"position":[959,316],"sequence":1,"properties":{"script":"const actual = options.rawData['compareSeries'].series\nconsole.log(options.rawData['Sagemaker_1'])\nconst predictions = JSON.parse(options.rawData['Sagemaker_1'].data)[\"predictions\"]\n\nconst actualData = actual.map(x => x[1])\nconst predictData = predictions[0][\"mean\"]\nvar total_error = 0\nfor (var i = 0; i < actualData.length; i++){\n   total_error += (predictData[i] - actualData[i]) ** 2\n}\nconst rmse = Math.sqrt(total_error / actualData.length)\nsend(null, {observedState : \"done\", rawData : {'rmse': rmse}})\n"}},{"label":"scriptSensor_1","name":"scriptSensor","version":"0.0.9","dataTrigger":false,"tickTrigger":false,"position":[451,316],"sequence":1,"properties":{"script":"const timeSeries = options.rawData['timeSeriesSensor_1'].series;\n\nif (!timeSeries) {\n  send(new Error('Missing property: timeSeries'), {observedState : \"Unconverted\"});\n}\n\n// Separate timestamps from data values\ntimestamps = timeSeries.map(x => x[0])\ndataValues = timeSeries.map(x => x[1])\n\n// Correctly format timestamp\nfirstTimdestamp = new Date(Math.min(...timestamps))\nformatedDate = firstTimdestamp.getFullYear() + \"-\" +\n                (firstTimdestamp.getMonth() + 1) + \"-\" +\n                firstTimdestamp.getDate() + \" \" +\n                firstTimdestamp.getHours() + \":\" +\n                firstTimdestamp.getMinutes() + \":\" +\n                firstTimdestamp.getSeconds()\n\nconst value = {\n  observedState: \"Converted\",\n  rawData: {\n    request: {\n        instances: [\n            {\n                start: formatedDate,\n                target: dataValues\n            }\n        ]\n    }\n  }\n};\n\nsend(null, value);"}},{"label":"timeSeriesSensor_1","name":"timeSeriesSensor","version":"1.2.1","dataTrigger":false,"tickTrigger":true,"position":[276,317],"sequence":1,"properties":{"grouping":"PT1H","aggregate":"sum","to":"1556711999999","resource":"asset_20_10111_electricity","metric":"ActualActivePower","from":"1554119999999"}}],"actuators":[{"label":"debugDialog_1","name":"debugDialog","version":"1.0.4","position":[1114,316],"properties":{"message":"RMSE for the first week of May: {{computeRMSE.rmse}}"}}],"relations":[],"triggers":[{"destinationLabel":"debugDialog_1","sourceLabel":"computeRMSE","invocationPolicy":0,"statesTrigger":["done","error"]},{"destinationLabel":"Sagemaker_1","sourceLabel":"scriptSensor_1","statesTrigger":["done"]},{"destinationLabel":"compareSeries","sourceLabel":"Sagemaker_1","statesTrigger":["Collected"]},{"destinationLabel":"computeRMSE","sourceLabel":"compareSeries","statesTrigger":["Collected"]},{"destinationLabel":"scriptSensor_1","sourceLabel":"timeSeriesSensor_1","statesTrigger":["Collected"]}],"name":"sagemaker_demo"}